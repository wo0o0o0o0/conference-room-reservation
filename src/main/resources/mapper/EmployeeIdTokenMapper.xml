<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.javasoso.meeting.mapper.EmployeeIdTokenMapper" >
  <resultMap id="BaseResultMap" type="cn.javasoso.meeting.model.EmployeeIdToken" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, employee_id, token, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee_id_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee_id_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.javasoso.meeting.model.EmployeeIdToken" >
    insert into employee_id_token (id, employee_id, token, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.javasoso.meeting.model.EmployeeIdToken" >
    insert into employee_id_token
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.javasoso.meeting.model.EmployeeIdToken" >
    update employee_id_token
    <set >
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.javasoso.meeting.model.EmployeeIdToken" >
    update employee_id_token
    set employee_id = #{employeeId,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectBySelective" resultMap="BaseResultMap" parameterType="cn.javasoso.meeting.model.EmployeeIdToken" >
        select
        <include refid="Base_Column_List" />
        from employee_id_token
        <where>
            <if test="id != null">
                id = #{id,jdbcType=INTEGER}
            </if>
            <if test="employeeId != null">
            and  employee_id = #{employeeId,jdbcType=INTEGER}
            </if>
            <if test="token != null" >
            and  token = #{token,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null" >
            and  create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>
</mapper>